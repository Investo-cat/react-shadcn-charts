name: Workflow

on:
  pull_request:
    branches: [main]

permissions:
  contents: write
  pull-requests: write

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Get package.json from main
        run: |
          git fetch origin main
          git show origin/main:package.json > package-main.json

      - name: Compare versions
        run: |
          old_version=$(jq -r .version package-main.json)
          new_version=$(jq -r .version package.json)

          echo "Main branch version: $old_version"
          echo "PR branch version:   $new_version"

          if [ "$old_version" = "$new_version" ]; then
            echo "❌ Version not bumped! Please update package.json"
            exit 1
          fi

          echo "✅ Version bump detected"

  unit-tests:
    runs-on: ubuntu-latest
    needs: check-version
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test

  publish:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"

      - run: npm ci
      - run: npm run build

      # If it's a tag (release) → publish to "latest"
      - name: Publish release
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          VERSION="v$(node -p "require('./package.json').version")"
          echo "Publishing $VERSION"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "$VERSION"
          git push origin "$VERSION"

          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # If it's a PR → publish a pre-release with unique tag
      - name: Publish PR preview
        if: github.event_name == 'pull_request'
        run: |
          PR_VERSION="0.0.0-pr${{ github.event.number }}-${{ github.run_number }}"
          echo "PR_VERSION=$PR_VERSION" >> $GITHUB_ENV

          npm version $PR_VERSION --no-git-tag-version
          npm publish --tag test --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const version = process.env.PR_VERSION;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Deployed test version: \`${version}\` to GitHub Packages.`
            });
